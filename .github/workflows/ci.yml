name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        distro:
          - opensuse
        format:
          - gpt_btrfs
#          - gpt_ext4
#          - gpt_xfs
#          - gpt_squashfs
#          - plain_squashfs
        exclude:
          # CentOS 8 and Clear Linux do not support btrfs.
          - distro: centos
            format: gpt_btrfs
          - distro: centos_epel
            format: gpt_btrfs
          # Remove once https://github.com/clearlinux/clr-boot-manager/pull/238 is merged and available.
          - distro: clear
            format: gpt_btrfs
          # Remove once https://github.com/vmware/tdnf/issues/154 is fixed.
          - distro: photon
            format: gpt_btrfs

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-mkosi

    - name: Install
      run: sudo apt-get install python3-pexpect qemu-system-x86-64 ovmf

    - name: Build ${{ matrix.distro }}/${{ matrix.format }}
      if: matrix.format != 'tar' &&
          matrix.distro != 'photon'
      run: |
        tee mkosi.default << EOF
        [Distribution]
        Distribution=${{ matrix.distro }}

        [Output]
        Format=${{ matrix.format }}

        [Validation]
        Password=
        EOF

        sudo ./mkosi build

#    - name: Boot ${{ matrix.distro }}/${{ matrix.format }}
#      # photon boot gets stuck on systemd-networkd-wait-online. See https://github.com/systemd/mkosi/pull/514.
#      if: matrix.format != 'tar' &&
#          matrix.distro != 'photon'
#      run: sudo ./tests/pexpect/boot.py ./mkosi boot

    - name: Build ${{ matrix.distro }}/${{ matrix.format }} UEFI UKI
      if: matrix.format != 'directory' &&
          matrix.format != 'plain_squashfs' &&
          matrix.format != 'tar' &&
          matrix.distro != 'clear' &&
          matrix.distro != 'openmandriva' &&
          matrix.distro != 'opensuse' &&
          matrix.distro != 'photon'
      run: |
        tee mkosi.default << EOF
        [Distribution]
        Distribution=${{ matrix.distro }}

        [Output]
        Format=${{ matrix.format }}
        Bootable=yes
        BootProtocols=uefi

        [Validation]
        Password=

        [Host]
        QemuHeadless=yes
        EOF

        sudo ./mkosi --force build

    - name: Boot ${{ matrix.distro }}/${{ matrix.format }} UEFI UKI
      if: matrix.format != 'directory' &&
          matrix.format != 'plain_squashfs' &&
          matrix.format != 'tar' &&
          matrix.distro != 'clear' &&
          matrix.distro != 'openmandriva' &&
          matrix.distro != 'opensuse' &&
          matrix.distro != 'photon'
      run: sudo ./tests/pexpect/boot.py ./mkosi qemu

    - name: Build ${{ matrix.distro }}/${{ matrix.format }} UEFI
      if: matrix.format != 'directory' &&
          matrix.format != 'plain_squashfs' &&
          matrix.format != 'tar' && (
          matrix.distro == 'arch' ||
          matrix.distro == 'centos' ||
          matrix.distro == 'fedora' ||
          matrix.distro == 'opensuse')
      run: |
        tee mkosi.default << EOF
        [Distribution]
        Distribution=${{ matrix.distro }}

        [Output]
        Format=${{ matrix.format }}
        Bootable=yes
        BootProtocols=uefi
        WithUnifiedKernelImages=no

        [Validation]
        Password=

        [Host]
        QemuHeadless=yes
        EOF

        sudo ./mkosi --force build

    - name: Boot ${{ matrix.distro }}/${{ matrix.format }} UEFI
      if: matrix.format != 'directory' &&
          matrix.format != 'plain_squashfs' &&
          matrix.format != 'tar' && (
          matrix.distro == 'arch' ||
          matrix.distro == 'centos' ||
          matrix.distro == 'fedora' ||
          matrix.distro == 'opensuse')
      run: sudo ./tests/pexpect/boot.py ./mkosi qemu

    - name: Build ${{ matrix.distro }}/${{ matrix.format }} BIOS
      if: matrix.format != 'directory' &&
          matrix.format != 'gpt_squashfs' &&
          matrix.format != 'plain_squashfs' &&
          matrix.format != 'tar' && (
          matrix.distro == 'arch' ||
          matrix.distro == 'centos' ||
          matrix.distro == 'fedora' ||
          matrix.distro == 'opensuse')
      run: |
        tee mkosi.default << EOF
        [Distribution]
        Distribution=${{ matrix.distro }}

        [Output]
        Format=${{ matrix.format }}
        Bootable=yes
        BootProtocols=bios

        [Validation]
        Password=

        [Host]
        QemuHeadless=yes
        EOF

        sudo ./mkosi --force build

    - name: Boot ${{ matrix.distro }}/${{ matrix.format }} BIOS
      if: matrix.format != 'directory' &&
          matrix.format != 'gpt_squashfs' &&
          matrix.format != 'plain_squashfs' &&
          matrix.format != 'tar' && (
          matrix.distro == 'arch' ||
          matrix.distro == 'centos' ||
          matrix.distro == 'fedora' ||
          matrix.distro == 'opensuse')
      run: sudo ./tests/pexpect/boot.py ./mkosi qemu
